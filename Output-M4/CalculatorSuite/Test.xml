<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="RakeshPC" name="Test" tests="12" failures="2" timestamp="26 Jan 2018 06:52:10 GMT" time="0.11" errors="0">
  <testcase name="subtractingTwoNumbers" time="0.032" classname="com.M4.NewTest"/>
  <testcase name="addingTwoPositiveNumbers" time="0.032" classname="com.M4.NewTest"/>
  <testcase name="divideZerobyANumber" time="0.0" classname="com.M4.NewTest"/>
  <testcase name="isNegative" time="0.0" classname="com.M4.NewTest"/>
  <testcase name="divideByZero" time="0.0" classname="com.M4.NewTest"/>
  <testcase name="isPositive" time="0.0" classname="com.M4.NewTest"/>
  <testcase name="cosine" time="0.016" classname="com.M4.NewTest">
    <failure type="java.lang.AssertionError" message="expected [1.0] but found [0.0]">
      <![CDATA[java.lang.AssertionError: expected [1.0] but found [0.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at com.M4.NewTest.cosine(NewTest.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </failure>
  </testcase> <!-- cosine -->
  <testcase name="squareRootOfNegativeNumber" time="0.016" classname="com.M4.NewTest">
    <failure type="java.lang.AssertionError" message="expected [2.23606797749979] but found [5.0]">
      <![CDATA[java.lang.AssertionError: expected [2.23606797749979] but found [5.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at com.M4.NewTest.squareRootOfNegativeNumber(NewTest.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </failure>
  </testcase> <!-- squareRootOfNegativeNumber -->
  <testcase name="multiplyingNumbers" time="0.0" classname="com.M4.NewTest"/>
  <testcase name="multiplyingNumbers" time="0.0" classname="com.M4.NewTest"/>
  <testcase name="multiplyingNumbers" time="0.0" classname="com.M4.NewTest"/>
  <testcase name="multiplyingNumbers" time="0.0" classname="com.M4.NewTest"/>
</testsuite> <!-- Test -->
